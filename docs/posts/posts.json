[
  {
    "path": "posts/2022-02-20-dataproject1/",
    "title": "Data Project: Binary Logistic Regression",
    "description": "An example of my data science work where I performed binary logistic regression on Florida Palmettos data.",
    "author": [
      {
        "name": "Sarah Hamilton",
        "url": {}
      }
    ],
    "date": "2022-02-20",
    "categories": [],
    "contents": "\n\nContents\nIntroduction\nData Exploration & Visualization\nBinary Logistic Regression\nModel 1\nModel 2\n\nModel Selection\nComparing AICs\n10-Fold Cross Validation\n\nModel Success\n\nIntroduction\nIn the following code, I perform binary logistic regression (BLR) on data related to Florida palmettos in order to determine which of two models better classifies the species of palmettos. I first performed BLR on two different models, and then visualized the results and identified the better performing model. The data used comes from the Environmental Data Initiative, and contains identifying information about the palmettos such as the year, species, site, and other parameters.\nData Citation: Abrahamson, W.G. 2019. Survival, growth and biomass estimates of two dominant palmetto species of south-central Florida from 1981 - 2017, ongoing at 5-year intervals ver 1. Environmental Data Initiative. https://doi.org/10.6073/pasta/f2f96ec76fbbd4b9db431c79a770c4d5\n\n\nhide\n\nknitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)\n\n#install necessary packages\nlibrary(tidyverse)\nlibrary(GGally) \nlibrary(broom) \nlibrary(jtools) \nlibrary(caret) \nlibrary(AICcmodavg) \nlibrary(here)\nlibrary(patchwork)\nlibrary(kableExtra)\n\n\n\nData Exploration & Visualization\nI plotted the data below to determine which variables will best predict the palmetto species.\n\n\nhide\n\n#read in the data\npalmetto <- read_csv(here(\"palmetto.csv\"))\n\n#species = 1 --> serenoa repens\n#species = 2 --> sabal etonia\n\n#explore differences in height, canopy length, canopy width, and green leaves for the two species using ggpairs\npalmetto_sub <- palmetto %>%\n  select(species, height:green_lvs) %>%\n  mutate(species = case_when( #rename the species to their scientific names \n    species == 1 ~ \"Serenoa repens\",\n    species == 2 ~ \"Sabal etonia\"\n  )) %>%\n  drop_na()\n\npairs_exploratory_plot <- palmetto_sub %>%\n  ggpairs(aes(color = species))\n\n#pairs_exploratory_plot #use to output the exploratory ggpairs plot\n\n#Height is very similar between the species, so plot green leaves vs. length and green leaves vs. width \nleaves_length_plot <- ggplot(data = palmetto_sub, aes(x = length, y = green_lvs)) +\n  geom_point(aes(color = species)) +\n  theme_minimal() +\n  labs(x = \"Length (cm)\", y = \"No. of Green Leaves\") +\n  scale_color_manual(values = c(\"#88315c\", \"#5799a8\"))\n\n#leaves_length_plot\n\nleaves_width_plot <- ggplot(data = palmetto_sub, aes(x = width, y = green_lvs)) +\n  geom_point(aes(color = species)) +\n  theme_minimal() +\n  labs(x = \"Width (cm)\", y = \"No. of Green Leaves\") +\n  scale_color_manual(values = c(\"#88315c\", \"#5799a8\")) +\n  theme(legend.position = \"none\")\n\n#leaves_width_plot\n\nlength_width_plot <- ggplot(data = palmetto_sub, aes(x = width, y = length)) +\n  geom_point(aes(color = species)) +\n  theme_minimal() +\n  labs(x = \"Width (cm)\", y = \"Length (cm)\") +\n  scale_color_manual(values = c(\"#88315c\", \"#5799a8\")) +\n  theme(legend.position = \"none\")\n\n#length_width_plot\n\n(length_width_plot | leaves_width_plot | leaves_length_plot) +\n  plot_annotation(caption = str_wrap(\"Figure 1. The top graph plots the length of the palmetto versus the width, the bottom left graph plots the number of green leaves on the palmetto versus the width, and the bottom right graph plots the number of green leaves on the palmetto versus the length. The color indicates the palmetto species.\"),\n                  theme = theme(plot.caption = element_text(hjust = 0.5)))\n\n\n\n\nThe exploratory plots show us that there is the most variation between species in the number of green leaves that each has. They show that the species do not vary much from each other for length and width. Therefore, the number of green leaves will likely be the most helpful variable for classifying species.\nBinary Logistic Regression\nModel 1\nThe first model I tested is species as a function of height, length, width, and number of green leaves.\n\n\nhide\n\n#make species a factor \npalmetto_sub$species <- as.factor(palmetto_sub$species)\n#Levels: Sabal etonia = 0, Serenoa repens = 1\n\n#BLR on Model 1: Plant type as function of plant height, canopy length, canopy width and green leaves.\nf1 <- species ~ height + length + width + green_lvs\n\npalmetto_blr1 <- glm(formula = f1,\n                     data = palmetto_sub,\n                     family = 'binomial')\n\n#summary(palmetto_blr1)\nblr1_tidy <- broom::tidy(palmetto_blr1)\n#blr1_tidy\n\n\n\n\n\nhide\n\n#make a table to predict the species of each point for model 1\nblr1_fitted <- palmetto_blr1 %>%\n  broom::augment(type.predict = 'response')\n\n#plot the probability \nggplot(data = blr1_fitted, aes(x = green_lvs, y = .fitted)) +\n  geom_point(aes(color = species)) +\n  geom_smooth(aes(color = species), se = FALSE) +\n  labs(x = \"No. of Green Leaves\", y = \"Probability of outcome 'Serenoa repens'\") +\n  theme_minimal()\n\n\n\n\n\n\nhide\n\n#visualize model outcomes for model 1\neff_1 <- effect_plot(palmetto_blr1,\n            pred = green_lvs,\n            interval = TRUE,\n            y.label = \"Probability of 'Serenoa repens'\")\n\neff_2 <- effect_plot(palmetto_blr1,\n            pred = length,\n            interval = TRUE,\n            y.label = \"Probability of 'Serenoa repens'\")\n\neff_3 <- effect_plot(palmetto_blr1,\n            pred = width,\n            interval = TRUE,\n            y.label = \"Probability of 'Serenoa repens'\")\n\neff_4 <- effect_plot(palmetto_blr1,\n            pred = height,\n            interval = TRUE,\n            y.label = \"Probability of 'Serenoa repens'\")\n\n(eff_1 | eff_2 | eff_3 | eff_4)\n\n\n\n\nModel 2\nThe second model I tested is species as a function of height, width, and number of green leaves.\n\n\nhide\n\n#BLR on Model 2: Plant type as function of  plant height, canopy width and green leaves\n\nf2 <- species ~ height + width + green_lvs\n\npalmetto_blr2 <- glm(formula = f2,\n                     data = palmetto_sub,\n                     family = 'binomial')\n\n#summary(palmetto_blr2)\nblr2_tidy <- broom::tidy(palmetto_blr2)\n#blr2_tidy\n\n\n\n\n\nhide\n\n#make a table to predict the species of each point for model 2\nblr2_fitted <- palmetto_blr2 %>%\n  broom::augment(type.predict = 'response')\n\n#plot the probability \nggplot(data = blr2_fitted, aes(x = green_lvs, y = .fitted)) +\n  geom_point(aes(color = species)) +\n  geom_smooth(aes(color = species), se = FALSE) +\n  labs(x = \"No. of Green Leaves\", y = \"Probability of outcome 'Serenoa repens'\") +\n  theme_minimal()\n\n\n\n\n\n\nhide\n\n#visualize model outcomes for model 2\neff_5 <- effect_plot(palmetto_blr2,\n            pred = green_lvs,\n            interval = TRUE,\n            y.label = \"Probability of 'Serenoa repens'\")\n\neff_6 <- effect_plot(palmetto_blr2,\n            pred = width,\n            interval = TRUE,\n            y.label = \"Probability of 'Serenoa repens'\")\n\neff_7 <- effect_plot(palmetto_blr2,\n            pred = height,\n            interval = TRUE,\n            y.label = \"Probability of 'Serenoa repens'\")\n\n(eff_5 | eff_6 | eff_7)\n\n\n\n\nModel Selection\nTo answer the question of which model is better, I compared the AICs of the models and then performed 10-fold cross validation to see which model performed better.\nComparing AICs\n\n\nhide\n\naic_models <- AICcmodavg::aictab(list(palmetto_blr1, palmetto_blr2))\n\n\n\nModel 1 has a lower AICc (5195) than model 2 (5987), indicating that it may be the better model. The difference in the AICc values is significant (Delta AICc = 793).\n10-Fold Cross Validation\n\n\nhide\n\nset.seed(21)\n\ntr_ctrl <- trainControl(method = \"repeatedcv\", number = 10, repeats = 10)\n\n#train the model \nmodel1 <- train(f1, data = palmetto_sub,\n                method = 'glm', family = 'binomial',\n                trControl = tr_ctrl)\n\n#model1\n\nmodel2 <- train(f2, data = palmetto_sub,\n                method = 'glm', family = 'binomial',\n                trControl = tr_ctrl)\n\n#model2\n\n\n\nThe results of the 10-fold cross validation returned an accuracy of 92% for Model 1 and an accuracy of 90% for Model 2. These values indicate slightly higher accuracy for Model 1, indicating that Model 1 is a slightly better model, which is also confirmed by Model 1 having a lower AIC value.\n\n\nhide\n\n#make a table of results of BLR models\n\nblr1_tidy$p.value <- ifelse(blr1_tidy$p.value < .001, \n                            paste(\"< .001\"))\n\nblr1_tidy %>%\n  kable(col.names = c(\"Term\", \"Estimate\", \"Std. Error\", \"Statistic\", \"P Value\"),\n        digits = 2,\n        caption = \"Table 1. BLR Model 1 Results\") %>%\n  kable_styling(full_width = FALSE)\n\n\n\nTable 1: Table 1. BLR Model 1 Results\n\n\nTerm\n\n\nEstimate\n\n\nStd. Error\n\n\nStatistic\n\n\nP Value\n\n\n(Intercept)\n\n\n-3.23\n\n\n0.14\n\n\n-22.71\n\n\n< .001\n\n\nheight\n\n\n0.03\n\n\n0.00\n\n\n12.67\n\n\n< .001\n\n\nlength\n\n\n-0.05\n\n\n0.00\n\n\n-24.56\n\n\n< .001\n\n\nwidth\n\n\n-0.04\n\n\n0.00\n\n\n-18.78\n\n\n< .001\n\n\ngreen_lvs\n\n\n1.91\n\n\n0.04\n\n\n49.11\n\n\n< .001\n\n\nhide\n\n# blr2_tidy %>%\n#   kable(col.names = c(\"Term\", \"Estimate\", \"Std. Error\", \"Statistic\", \"P Value\"),\n#         digits = 2,\n#         caption = \"Table 2. BLR Model 2 Results\") %>%\n#   kable_styling(full_width = FALSE)\n\n\n\nFinal Model 1 Equation:\n\n\nhide\n\n#output the final equation \nequatiomatic::extract_eq(model = palmetto_blr1, use_coefs = TRUE)\n\n\n\\[\n\\log\\left[ \\frac { \\widehat{P( \\operatorname{species} = \\operatorname{Serenoa\\ repens} )} }{ 1 - \\widehat{P( \\operatorname{species} = \\operatorname{Serenoa\\ repens} )} } \\right] = -3.23 + 0.03(\\operatorname{height}) - 0.05(\\operatorname{length}) - 0.04(\\operatorname{width}) + 1.91(\\operatorname{green\\_lvs})\n\\]\n\nModel Success\n\n\nhide\n\n#evaluate how successful the model is at classifying the two palmetto types\n\nblr1_predict <- blr1_fitted %>%\n  mutate(predicted = case_when(\n    .fitted >= 0.5 ~ \"Serenoa repens\",\n    .fitted < 0.5 ~ \"Sabal etonia\"\n  )) %>%\n  mutate(correct = case_when(\n    species == predicted ~ \"Y\",\n    species != predicted ~ \"N\"\n  ))\n\naccuracy_counts <- blr1_predict %>%\n  janitor::tabyl(species, correct)\n\naccuracy_counts <- accuracy_counts %>%\n  mutate(\"% Correct\" = round(100*accuracy_counts$Y/(accuracy_counts$Y+accuracy_counts$N),2)) %>%\n  kable(col.names = c(\"Species\", \"Incorrectly Classified\", \"Correctly Classified\", \"% Correctly Classified\"),\n        digits = 1,\n        caption = \"Table 2. Classification accuracy results from BLR Model 1\") %>%\n  kable_styling(full_width = FALSE)\n\naccuracy_counts\n\n\n\nTable 2: Table 2. Classification accuracy results from BLR Model 1\n\n\nSpecies\n\n\nIncorrectly Classified\n\n\nCorrectly Classified\n\n\n% Correctly Classified\n\n\nSabal etonia\n\n\n454\n\n\n5701\n\n\n92.6\n\n\nSerenoa repens\n\n\n564\n\n\n5548\n\n\n90.8\n\n\nModel 1 predicted the Sabal etonia species with slightly more accuracy than the Serena repens species, but it predicted both with greater than 90% accuracy.\n\n\n\n",
    "preview": "posts/2022-02-20-dataproject1/dataproject1_files/figure-html5/unnamed-chunk-1-1.png",
    "last_modified": "2022-03-10T09:54:49-08:00",
    "input_file": "dataproject1.knit.md"
  },
  {
    "path": "posts/2022-02-20-dataproject2/",
    "title": "Data Project: Nonlinear Least Squares Regression",
    "description": "An example of my data science work where I performed nonlinear least squares regression on lizard data.",
    "author": [
      {
        "name": "Sarah Hamilton",
        "url": {}
      }
    ],
    "date": "2022-02-20",
    "categories": [],
    "contents": "\n\nContents\nIntroduction\nDefining and Transforming the Function\nVisualizing the Model\nModel a Subset of the Data (Male Western Whiptails)\n\nIntroduction\nIn the following code, I perform nonlinear least squares (NLS) regression on data related to lizards in New Mexico in order to analyze models for predicting lizard weight based on snout to vent length. I performed these NLS regressions on all of the data as well as a subset, and then visualized the results. The data used comes from the Jornada Basin Long Term Ecological Research site, and it contains information about lizards’ species, sex, and other parameters.\nDefining and Transforming the Function\nThe following function represents a possible model for predicting lizard weight based off of snout to vent length:\n\\[\nW = a*(SVL)^b\n\\]\nNext, I transformed the function into a linear form to get a formula to run a linear regression on to get coefficient guesses:\n\\[\nln(W) = ln(a) + b*ln(SVL) \n\\]\nI then represented this model as a function in R.\n\n\nhide\n\nlizard_function <- function(a, b, SVL){\n  weight_out = a*SVL^b\n  return(weight_out)\n}\n\n\n\nI then transformed the length and weight data, then ran a linear regression on it to estimate coefficients to input into our NLS code as initial guesses.\n\n\nhide\n\n#add columns in the data for log(length) and log(weight)\nlizards <- lizards %>%\n  mutate(log_length = log(SV_length),\n         log_weight = log(weight)\n  )\n\n\n\n\n\nhide\n\n#use linear regression on the log() values to find guesses for coefficients\nmodel_linear <- lm(log_weight ~ log_length, data = lizards) \n\na_estimate <- exp(model_linear$coefficients[1]) #divide by b or not? \nb_estimate <- model_linear$coefficients[2]\n\n\n\nVisualizing the Model\nAfter running a linear regression model on the transformed data and then transforming the coefficients back to our initial exponential model, I got an estimate for a of 2^{-4} and an estimate for b of 2.54. I then ran an NLS model and input these values as start values for R. The following table shows the results of our NLS model run on all lizard data:\n\n\nhide\n\n#run NLS on one model \n\nnls_lizards = nls(weight ~ lizard_function(a, b, SV_length),\n                  data = lizards,\n                  start = list(a = exp(model_linear$coefficients[1]), b = model_linear$coefficients[2]),\n                  trace = TRUE)\n\n\n\nTable 1. Results of the nonlinear least squares regression on all lizards data.\n\n\nhide\n\n#output the model \n\nnls_tidy <- tidy(nls_lizards)\nnls_tidy$p.value <- ifelse(nls_tidy$p.value < .001, paste(\"< .001\"))\n\nnls_tidy %>%\n  select(term, estimate, std.error, p.value) %>%\n  kable(col.names = c(\"Term\", \"Estimate\", \"Std. Error\", \"P Value\"),\n        digits = c(4,4,4,4)) %>%\n  kable_styling(full_width = FALSE) \n\n\n\nTerm\n\n\nEstimate\n\n\nStd. Error\n\n\nP Value\n\n\na\n\n\n0.0003\n\n\n0.000\n\n\n< .001\n\n\nb\n\n\n2.4532\n\n\n0.027\n\n\n< .001\n\n\nI then plotted the general model on top of all of the lizard data:\n\n\nhide\n\n#plot the model \n\nmodel_augment <- broom::augment(nls_lizards)\n\nggplot() +\n  geom_point(data = lizards, aes(x = SV_length, y = weight, color = sex)) +\n  geom_line(data = model_augment, aes(x = SV_length, y = .fitted, color = \"NLS\")) +\n  labs(x = \"Snout-Vent Length (mm)\", y = \"Body Weight (g)\") +\n  theme_minimal() +\n  scale_color_manual(values = c(\"#b19ebe\", \"#1a4da9\", \"#ff9c19\"))\n\n\n\n\nFigure 1. Lizard Body Weight vs. Snout-Vent Length. The lizard sex is indicated by color and the NLS model is colored in orange.\nModel a Subset of the Data (Male Western Whiptails)\nNext I am going to fit an NLS model to the data for just male Western Whiptail lizards. I repeated the process used above after filtering the original data to have just male Western Whiptail lizards.\n\n\nhide\n\n#make the new model with just male Western Whiptail lizard (Cnemidophorus tigrisatus)\n\nlizards_male_cnti <- lizards %>%\n  filter(spp == \"CNTI\" & sex == \"M\")\n\nlizards_male_cnti <- lizards_male_cnti %>%\n  mutate(log_length = log(SV_length),\n         log_weight = log(weight))\n\nmodel_linear_sub <- lm(log_weight ~ log_length, data = lizards_male_cnti)\n\na_estimate2 <- exp(model_linear_sub$coefficients[1])\nb_estimate2 <- model_linear_sub$coefficients[2]\n\n#run NLS on the new model\n\nnls_lizards_sub = nls(weight ~ lizard_function(a, b, SV_length),\n                      data = lizards_male_cnti,\n                      start = list(a = exp(model_linear_sub$coefficients[1]), b = model_linear_sub$coefficients[2]),\n                      trace = TRUE)\n\n\n\nThe following table shows the results of our NLS model run on only the male Western Whiptail lizard data:\nTable 2. Results of the nonlinear least squares regression on the male Western Whiptails data.\n\n\nhide\n\n#output the model \n\ntidy(nls_lizards_sub) %>%\n  select(term, estimate, std.error, p.value) %>%\n  kable(col.names = c(\"Term\", \"Estimate\", \"Std. Error\", \"P Value\"),\n        digits = c(4,4,4,4)) %>%\n  kable_styling(full_width = FALSE)\n\n\n\nTerm\n\n\nEstimate\n\n\nStd. Error\n\n\nP Value\n\n\na\n\n\n0.0005\n\n\n0.0004\n\n\n0.2192\n\n\nb\n\n\n2.3683\n\n\n0.1800\n\n\n0.0000\n\n\nI then plotted the male Western Whiptail model and the general model on top of the male Western Whiptail data:\n\n\nhide\n\n#calculate RMSEs of the models\nrmse_general <- rmse(nls_lizards, data = lizards_male_cnti)\nrmse_male <- rmse(nls_lizards_sub, data = lizards_male_cnti)\n\n#plot the models\n\nmodel_augment_sub <- broom::augment(nls_lizards_sub)\n\nggplot() +\n  geom_point(data = lizards_male_cnti, aes(x = SV_length, y = weight, color = sex)) +\n  geom_line(data = model_augment, aes(x = SV_length, y = .fitted, color = \"NLS General\")) +\n  geom_line(data = model_augment_sub, aes(x = SV_length, y = .fitted, color = \"NLS Male CNTI\")) +\n  labs(x = \"Snout-Vent Length (mm)\", y = \"Body Weight (g)\") +\n  theme_minimal() +\n  scale_color_manual(values = c(\"#1a4da9\", \"#ff9c19\", \"#7be61a\")) +\n  xlim(0, 120) +\n  ylim(0, 40)\n\n\n\n\nFigure 2. Lizard Body Weight vs. Snout-Vent Length. The NLS model is indicated by color, with the general NLS model plotted in orange and the male CNTI model plotted in green. Only male Western Whiptail Lizard data points are shown on the plot. The general NLS model has a root mean squared error (RMSE) of 3.56 and the male Western Whiptail NLS model has an RMSE of 3.35. The lower RMSE of the latter indicates that the NLS model run on just the male Western Whiptail data better predicts the weights of male Western Whiptail lizards than the general NLS model. Therefore, we should use the male Western Whiptail NLS model for predicting these specific lizards’ weights, and in general, we should filter for the known variables before making an NLS model to predict the unknown variable when possible.\nData Source: Lightfoot, D. and W.G. Whitford. 2020. Lizard pitfall trap data from 11 NPP study locations at the Jornada Basin LTER site, 1989-2006 ver 37. Environmental Data Initiative. https://doi.org/10.6073/pasta/4a6e258fb49c31e222ecbbcfd128967f\n\n\n\n",
    "preview": "posts/2022-02-20-dataproject2/dataproject2_files/figure-html5/unnamed-chunk-7-1.png",
    "last_modified": "2022-03-10T10:11:46-08:00",
    "input_file": "dataproject2.knit.md"
  },
  {
    "path": "posts/2022-02-20-dataproject3/",
    "title": "Data Project: Principal Component Analysis",
    "description": "An example of my data science work where I performed a principal component analysis of climatic data.",
    "author": [
      {
        "name": "Sarah Hamilton",
        "url": {}
      }
    ],
    "date": "2022-02-20",
    "categories": [],
    "contents": "\n\nContents\nIntroduction\nPrincipal Component Analysis (PCA)\n\nIntroduction\nIn the following code, I perform a principal component analysis (PCA) on global climatic data to determine which variables explain the variance in global climate. The data was collected from Google Earth Engine and contains variables related to elevation, temperature, tree cover, rain, and other climate variables. After I ran a PCA, I made a biplot and screeplot of the results.\n\n\nhide\n\nknitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)\n\nlibrary(tidyverse)\nlibrary(here)\n\nlibrary(ggfortify)\nlibrary(palmerpenguins)\nlibrary(patchwork)\n\nlibrary(readxl)\nlibrary(gghighlight)\nlibrary(lubridate)\nlibrary(plotly)\n\nlibrary(janitor)\n\n\n\nPrincipal Component Analysis (PCA)\nIn the following code, I selected variables of interest, scaled the data so that it was of comparable magnitude, and then ran a PCA on the data. I then made a biplot of the results.\n\n\nhide\n\n#data wrangling\nenv <- read_csv(here(\"world_env_vars.csv\")) %>%\n  select(elevation:isothermality, \n         rain_mean_annual, \n         temp_max_warmestMonth, \n         temp_mean_annual, \n         temp_min_coldestMonth, \n         wind, \n         cloudiness) %>%\n  drop_na()\n\n#running the PCA\nenv_pca <- env %>%\n  select(elevation:cloudiness) %>%\n  scale() %>%\n  prcomp()\n\n#making the biplot\nautoplot(env_pca,\n         data = env,\n         loadings = TRUE,\n         colour = 'temp_mean_annual',\n         loadings.label = TRUE,\n         loadings.colour = 'gray',\n         loadings.label.colour = 'black',\n         loadings.label.vjust = -0.75,\n         loadings.label.hjust = 0.25) +\n  theme_minimal() +\n  labs(caption = str_wrap(\"Figure 1. Biplot of the PCA results. The axes PC1 and PC2 show the directions accounting for the most variance in the data.\")) +\n  theme(plot.caption = element_text(hjust = 0.5)) +\n  labs(colour = \"Annual Mean Temp.\") +\n  scale_colour_stepsn(colours = c(\"#00008b\",\"#add8e6\",\"#ff7f7f\",\"#a50000\"), \n                      n.breaks = 4,\n                      limits = c(-10,30))\n\n\n\n\nNext, I made a screeplot of the results to visualize how all principal components contribute to the variance.\n\n\nhide\n\n#making the screeplot using package \n#screeplot(env_pca, type = 'barplot', colour = '#72c6d5')\n\n#making screeplot by hand\nsd_vec <- env_pca$sdev\nvar_vec <- sd_vec^2\n\npc_names <- colnames(env_pca$rotation)\npct_expl_df <- data.frame(v = var_vec,\n                          pct_v = var_vec / sum(var_vec),\n                          pc = fct_inorder(pc_names)) %>%\n  mutate(pct_lbl = paste0(round(pct_v*100, 1), '%'))\n\nggplot(pct_expl_df, aes(x = pc, y = v)) +\n  geom_col(color = \"#72c6d5\", fill = \"#578f8e\") +\n  geom_text(aes(label = pct_lbl), vjust = 0, nudge_y = 0.02) +\n  labs(x = \"Principal Component\", y = \"Variance Explained\") +\n  theme_minimal() +\n  labs(caption = str_wrap(\"Figure 2. Screeplot of the PCA results. The x axis shows the principal components and the y axis shows the percent vairance explained by each principal component.\")) +\n  theme(plot.caption = element_text(hjust = 0.5))\n\n\n\n\nMy biplot and screeplot indicate the following:\nThe majority of the variance in climate between the countries can be explained by the first two principal components.\nCountries’ mean annual temperatures are positively correlated with both the minimum temperature of the coldest month and the maximum temperature of the warmest month.\nThe three variables above (mean annual temperature, minimum temperature of coldest month, and maximum temperature of warmest month) are negatively correlated to cropland cover and elevation.\nData Citation: zander_venter. (2018). Environmental variables for world countries. Kaggle.com. https://www.kaggle.com/zanderventer/environmental-variables-for-world-countries\n\n\n\n",
    "preview": "posts/2022-02-20-dataproject3/dataproject3_files/figure-html5/unnamed-chunk-1-1.png",
    "last_modified": "2022-03-10T10:13:16-08:00",
    "input_file": "dataproject3.knit.md"
  },
  {
    "path": "posts/2022-02-20-dataproject4/",
    "title": "Data Project: Hierarchical Clustering",
    "description": "An example of my data science work where I performed hierarchical clustering on watershed data.",
    "author": [
      {
        "name": "Sarah Hamilton",
        "url": {}
      }
    ],
    "date": "2022-02-20",
    "categories": [],
    "contents": "\n\nContents\nIntroduction\nHierarchical Cluster Analysis on Water Chemistry\nComplete Linkage Dendrogram\nSingle Linkage Dendrogram\nTanglegram\n\nSummary\n\nIntroduction\nIn the following code, I performed hierarchical cluster analysis on stream chemistry data from the Santa Barbara Coastal drainage area to visualize how water chemistry properties compare between watershed sites. I visualized the results of the clustering analysis using both complete and single linkage degrograms and a tanglegram.\nHierarchical Cluster Analysis on Water Chemistry\nI first wrangled the data by grouping it by drainage site and calculating the mean values for each chemical property at each site. I then scaled the data so that the values would be of comparable magnitudes.\n\n\nhide\n\nknitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)\n\nlibrary(tidyverse)\nlibrary(palmerpenguins)\nlibrary(here)\n\nlibrary(NbClust)\nlibrary(cluster)\nlibrary(factoextra)\nlibrary(dendextend)\nlibrary(ggdendro)\n\n\n\n\n\nhide\n\n# Read in and wrangle the data \n\nwater <- read_csv(here(\"sbc_lter_registered_stream_chemistry.csv\")) %>%\n  na_if(-999) %>%\n  drop_na %>%\n  select(-timestamp_local)\n\nwater <- water %>%\n  mutate(site_code = case_when(\n    site_code == \"AB00\" ~ \"Arroyo Burro\",\n    site_code == \"AT07\" ~ \"Atascadero Creek\",\n    site_code == \"BC02\" ~ \"Bell Canyon Creek\",\n    site_code == \"DV01\" ~ \"Devereaux Creek\",\n    site_code == \"GV01\" ~ \"Gaviota\",\n    site_code == \"HO00\" ~ \"Arroyo Hondo\",\n    site_code == \"MC00\" ~ \"Mission Creek (Montecito)\",\n    site_code == \"MC06\" ~ \"Mission Creek (Rocky Nook)\",\n    site_code == \"ON02\" ~ \"San Onofre Creek\",\n    site_code == \"RG01\" ~ \"Refugio Creek\",\n    site_code == \"RS02\" ~ \"Rattlesnake Creek\",\n    site_code == \"SP02\" ~ \"San Pedro Creek\",\n    site_code == \"TO02\" ~ \"Tecolote Creek\"\n  ))\n\n# Group the data by site and get the mean value for each site\nwater_sites <- water %>%\n  group_by(site_code) %>%\n  summarize(\n    nh4_uM_mean = mean(nh4_uM),\n    no3_uM_mean = mean(no3_uM),\n    po4_uM_mean = mean(po4_uM),\n    tdn_uM_mean = mean(tdn_uM),\n    tdp_uM_mean = mean(tdp_uM),\n    tpc_uM_mean = mean(tpc_uM),\n    tpn_uM_mean = mean(tpn_uM),\n    tpp_uM_mean = mean(tpp_uM),\n    tss_mgperLiter_mean = mean(tss_mgperLiter),\n    spec_cond_uSpercm_mean = mean(spec_cond_uSpercm)\n  )\n\n# Scale the data\nwater_sites_scale <- water_sites %>%\n  select(-site_code) %>%\n  scale()\n\n# Rename the rows to be the site name\nrownames(water_sites_scale) <- water_sites$site_code\n\n\n\nComplete Linkage Dendrogram\nNext, I made a complete linkage dendrogram of watershed sites.\n\n\nhide\n\n# Calculate distance matrix\nwater_dist <- dist(water_sites_scale, method = 'euclidean')\n\n# Complete linkage hierarchical clustering\nwater_hc_complete <- hclust(water_dist, method = 'complete')\n\n# Plot a dendrogram\nggdendrogram(water_hc_complete, rotate = TRUE) +\n  theme_minimal() +\n  labs(x = \"Site\", y = \"Distance\")\n\n\n\n\nFigure 1. Dendrogram for complete linkage hierarchical clustering of watershed sites based on stream water chemistry.\nSingle Linkage Dendrogram\nNext, I made a single linkage dendrogram of watershed sites.\n\n\nhide\n\n# Single linkage hierarchical clustering\nwater_hc_single <- hclust(water_dist, method = 'single')\n\n# Plot a dendrogram\nggdendrogram(water_hc_single, rotate = TRUE) +\n  theme_minimal() +\n  labs(x = \"Site\", y = \"Distance\")\n\n\n\n\nFigure 2. Dendrogram for single linkage hierarchical clustering of watershed sites based on stream water chemistry.\"\nTanglegram\nFinally, I made a tanglegram from the complete and single linkage dendrograms.\n\n\nhide\n\n# Plot a tanglegram\ndend_complete <- as.dendrogram(water_hc_complete)\ndend_single <- as.dendrogram(water_hc_single)\n\ntanglegram(dend_complete, dend_single,\n           color_lines = c(\"#1a9cb8\",\"#4682b4\",\"#abcdef\",\"#6495ed\",\"#87cefa\",\"#92dff3\"))\n\n\n\n\nFigure 3. Tanglegram for complete and single linkage hierarchical clustering of watershed sites based on stream water chemistry. The complete linkage dendrogram is on the left side and the single linkage dendrogram is on the right side.\nSummary\nThe results of the hierarchical clustering tells us the following:\nThe Gaviota and San Onofre Creek sites seem to differ the most in water chemistry from the other sites, as evident by their being the last to be linked in the single linkage dendrogram and their being in their own branch in the complete linkage dendrogram.\nThe Rocky Nook and Montecito Mission Creek sites seem to be the most similar to each other, as evident by their being linked first in the single linkage dendrogram. This confirms expectations that the measurements would be similar as the sites are both on the same creek.\nData Citation: Santa Barbara Coastal LTER and J. Melack. 2019. SBC LTER: Land: Stream chemistry in the Santa Barbara Coastal drainage area, ongoing since 2000 ver 16. Environmental Data Initiative. https://doi.org/10.6073/pasta/67a558a24ceed9a0a5bf5e46ab841174.\n\n\n\n",
    "preview": "posts/2022-02-20-dataproject4/dataproject4_files/figure-html5/unnamed-chunk-2-1.png",
    "last_modified": "2022-03-10T10:16:11-08:00",
    "input_file": "dataproject4.knit.md"
  },
  {
    "path": "posts/2022-01-21-welcome/",
    "title": "Welcome to my blog!",
    "description": "An introduction to my blog.",
    "author": [
      {
        "name": "Sarah Hamilton",
        "url": {}
      }
    ],
    "date": "2022-01-21",
    "categories": [],
    "contents": "\nHello! This blog will contain updates from my data science adventures, such as cool visualizations I have made or other fun updates.\n\n\n\n",
    "preview": {},
    "last_modified": "2022-02-20T16:27:52-08:00",
    "input_file": {}
  }
]
